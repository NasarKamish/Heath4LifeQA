exports.up = function (knex) {
    return knex.schema
        .createTable('users', function (table) {
            table.uuid('id').primary().unique()
            table.string('fullname').notNullable()
            table.string('email').unique().notNullable()
            table.string('password').notNullable()
            table.string('role').notNullable().defaultTo('counsellor')
            table.timestamp('created_at').defaultTo(knex.fn.now())
            table.timestamp('updated_at').defaultTo(knex.fn.now())
        })
        .createTable('areas', function (table) {
            table.uuid('id').primary().unique()
            table.string('area').notNullable()
            table.timestamp('created_at').defaultTo(knex.fn.now())
            table.timestamp('updated_at').defaultTo(knex.fn.now())
        })
        .createTable('sites', function (table) {
            table.uuid('id').primary().unique()
            table.string('type').notNullable()
            table.string('site_name').notNullable()
            table.string('site_code').notNullable()
            table.string('code_number').notNullable()
            table.string('district').notNullable()
            table.timestamp('created_at').defaultTo(knex.fn.now())
            table.timestamp('updated_at').defaultTo(knex.fn.now())
        })
        .createTable('comm_number', function (table)  {
            table.increments();
            table.integer('code_number').defaultTo(0);
            table.timestamps(true, true);
        })
        .createTable('surveys', function (table) {
            table.uuid('id').primary().unique()
            table.string('site_name').notNullable()
            table.string('site_type').notNullable()
            table.string('sub_district').notNullable()
            table.timestamp('date').defaultTo(knex.fn.now())
            table.timestamp('time_in').notNullable().defaultTo(knex.fn.now())
            table.string('counsellor_name').notNullable()
            table.string('client_name_and_surname').notNullable()
            table.string('gender').notNullable()
            table.string('birth_date').notNullable()
            table.string('last_tested')
            table.integer('age_at_intake').notNullable()
            table.string('grade').notNullable().defaultTo('N/A')
            table.string('race').notNullable()
            table.string('mobile').notNullable().defaultTo('N/A')
            table.boolean('consent_to_sms').notNullable().defaultTo(false)
            table.string('client_community').notNullable()
            table.boolean('first_time_doing_HIV_test').defaultTo(false)
            table.boolean('first_time_with_LC').defaultTo(false)
            table.string('number_times_tested').defaultTo('N/A')
            table.string('last_HIV_test')
            table.string('last_test_result')
            table.boolean('scheduled_follow_up_test').notNullable().defaultTo(false)
            table.string('signature', [500000]).notNullable()
            table.boolean('client_on_TB_med').notNullable().defaultTo(false)
            table.specificType('TB_symptoms', 'TEXT[]').notNullable('{}')
            table.string('TB_screening_result').notNullable()
            table.boolean('has_client_ever_had_sex').notNullable().defaultTo(false)
            table.specificType('kind_of_sex', 'TEXT[]').defaultTo('{}')
            table.string('last_had_unprotected_sex')
            table.string('blood_contact').notNullable().defaultTo('No')
            table.specificType('STI_symptoms', 'TEXT[]').notNullable().defaultTo('{}')
            table.string('STI_screening_result')
            table.timestamp('time_out').notNullable().defaultTo(knex.fn.now())
            table.string('sales_force_client_code').notNullable()
            table.boolean('received_test_results').notNullable().defaultTo(false)
            table.string('reason_for_no_result').notNullable().defaultTo("N/A")
            table.integer('risks_number')
            table.specificType('what_steps', 'TEXT[]').defaultTo('{}')
            table.string('step1_action_plan').defaultTo("N/A")
            table.string('step2_action_plan').defaultTo("N/A")
            table.string('step3_action_plan').defaultTo("N/A")
            table.string('step4_action_plan').defaultTo("N/A")
            table.string('HIV_test_results')
            table.string('test1_type')
            table.string('test1_lot_number')
            table.string('test1_results')
            table.string('maintenance_plan')
            table.string('test2_type')
            table.string('test2_lot_number')
            table.string('test2_results')
            table.string('test3_type')
            table.string('test3_lot_number')
            table.string('test3_results')
            table.string('client_risk1').defaultTo("N/A")
            table.string('client_risk2').defaultTo("N/A")
            table.string('client_risk3').defaultTo("N/A")
            table.string('client_risk1_stage').defaultTo("N/A")
            table.string('client_risk2_stage').defaultTo("N/A")
            table.string('client_risk3_stage').defaultTo("N/A")
            table.string('client_action_plan1').defaultTo("N/A")
            table.string('client_action_plan2').defaultTo("N/A")
            table.string('client_action_plan3').defaultTo("N/A")
            table.boolean('referred').defaultTo(false)
            table.specificType('referral_point', 'TEXT[]').defaultTo('{}')
            table.specificType('referral_reason', 'TEXT[]').defaultTo('{}')
            table.string('end_of_window_period').defaultTo("N/A")
            table.boolean('follow_up_required').notNullable().defaultTo(false)
            table.string('follow_up_reason').notNullable().defaultTo("N/A")
            table.string('follow_up_date').defaultTo("N/A")
            table.timestamp('updated_at').defaultTo(knex.fn.now())
        })
};

exports.down = function (knex) {
    return knex.schema.dropTableIfExists('users').dropTableIfExists('areas').dropTableIfExists('comm_number').dropTableIfExists('sites').dropTableIfExists('surveys');
};
